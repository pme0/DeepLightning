task: SemanticSegmentation

modes: 
  train: true
  test: false
  
data:
  dataset: HAM10000
  root: /Users/pme/research/data/HAM10000
  num_workers: 4
  batch_size: 64
  module: 
    target: deeplightning.data.dataloaders.vision.ham10000.HAM10000
  image_size: [600, 450]
  num_channels: 3
  num_classes: 2  # segmentation classes
  train_transforms:
    normalize: # use `deeplightning.utils.data.compute_dataset_mean_and_stdev()`
      mean: [0., 0., 0.]
      std: [1., 1., 1.]
    resize: [32, 32]
  test_transforms:
    normalize:
      mean: [0., 0., 0.]
      std: [1., 1., 1.]
 
model:
  module: 
    target: deeplightning.task.vision.segmentation.TaskModule
  network:
    target: torchvision.models.segmentation.deeplabv3_resnet50
    params: 
      num_classes: 2
  optimizer:
    target: deeplightning.optimizer.lion.Lion
    params:
  scheduler:
    target: torch.optim.lr_scheduler.ExponentialLR
    params:
      gamma: 0.99
    call:
      interval: "epoch"
      frequency: 1
  loss:
    target: torch.nn.CrossEntropyLoss
    params:

engine:
  accelerator: cpu
  strategy: auto
  devices: auto
  num_nodes: 1
  precision: 32

metrics:
  train: default
  val: default
  test: default
  
train:
  num_epochs: 10
  val_every_n_epoch: 1
  grad_accum_from_epoch: 0
  grad_accum_every_n_batches: 1
  ckpt_resume_path: null
  ckpt_monitor_metric: val_acc  # used in `ModelCheckpoint` callback
  ckpt_every_n_epochs: 1
  ckpt_save_top_k: 1
  early_stop_metric: null
  early_stop_delta: 0.001
  early_stop_patience: 3

test:
  ckpt_test_path: /PATH_TO_CKPT # used only when `modes.test=True`

logger:
  name: wandb
  project_name: skin-lesion-segmentation
  tags: ["_"] # cannot be empty
  notes: null
  log_every_n_steps: 20