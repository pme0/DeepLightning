stages: 
  train: 
    active: true
    num_epochs: 3
    val_every_n_epoch: 1
    grad_accum_from_epoch: 0
    grad_accum_every_n_batches: 1
    ckpt_resume_path: null
    ckpt_monitor_metric: val_classification_accuracy  # used in `ModelCheckpoint` callback
    ckpt_monitor_mode: max  # used in `ModelCheckpoint` callback
    ckpt_every_n_epochs: 1
    ckpt_save_top_k: 1
    early_stop_metric: null
    early_stop_delta: 0.001
    early_stop_patience: 3
  test: 
    active: false
    ckpt_test_path: null  # only used when `stages.test.active` is true

data:
  dataset: MNIST
  root: ~/data/MNIST
  batch_size: 128
  debug_batch_size: null # maximum number of samples (debug)
  num_workers: 8
  persistent_workers: true
  pin_memory: true
  module: 
    target: deeplightning.datasets.vision.mnist.MNIST
  transforms:
    train:
      normalize:
        mean: [0.1307]
        std: [0.3081]
    test:
      normalize:
        mean: [0.1307]
        std: [0.3081]

task:
  name: image_classification
  model:
    target: deeplightning.models.cnn.MiniCNN
    args:
      num_classes: 10
      num_channels: 1
  optimizer:
    target: deeplightning.optimizers.lion.Lion
    args:
  scheduler:
    target: torch.optim.lr_scheduler.ExponentialLR
    args:
      gamma: 0.99
    call:
      interval: "epoch"
      frequency: 1
  loss:
    target: torch.nn.CrossEntropyLoss
    args:
  metrics:
    train: ["classification_accuracy"]
    val: ["classification_accuracy", "confusion_matrix", "precision_recall_curve"]
    test: ["classification_accuracy", "confusion_matrix", "precision_recall_curve"]

engine:
  accelerator: cpu
  strategy: auto
  devices: auto
  num_nodes: 1
  precision: 32
  seed: 101
  
logger:
  provider: wandb
  project: digit-classification
  log_every_n_steps: 1
  runtime:
    run_id: null
    run_name: null
    run_dir: null
    artifact_path: null
  tags: ["//"] # cannot be empty
  notes: null
